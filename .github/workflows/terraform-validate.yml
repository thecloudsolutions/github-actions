name: Terraform validate
on:
  workflow_call:
    inputs:
      terraform-directory:
        required: false
        type: string
        default: "."
permissions:
  contents: read
  pull-requests: write
jobs:
  terraform-validate:
    name: Run terraform validate
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.validate-check.outcome }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5
        
      - name: Run terraform validate recursively
        id: validate-check
        run: |
          set -e
          ORIGINAL_DIR=$(pwd)
          
          find . -type d | while read dir; do
            if ls "$dir"/*.tf > /dev/null 2>&1; then
              echo "Validating in $dir"
              
              cd "$dir"
              
              echo "Running init in $dir"
              if ! terraform init -backend=false -input=false; then
                echo "Init failed in $dir"
                exit 1
              fi
              
              echo "Running validate in $dir"
              if ! terraform validate -no-color; then
                echo "Validate failed in $dir"
                exit 1
              fi
              
              cd "$ORIGINAL_DIR"
              echo ""
            fi
          done

  comment:
    needs: terraform-validate
    if: always()
    uses: thecloudsolutions/github-actions/.github/workflows/terraform-comment.yml@main
    with:
      step-name: "Configuration Validation"
      step-result: ${{ needs.terraform-validate.outputs.result }}
      success-message: "Configuration is valid."
      failure-message: "Configuration is invalid. Please run validation locally and fix the issues."
